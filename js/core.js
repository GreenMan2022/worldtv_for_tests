// core.js ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
export const channelsContainer = document.getElementById('channelsContainer');
export const mainCategoriesPanel = document.getElementById('mainCategoriesPanel');
export const subCategoriesPanel = document.getElementById('subCategoriesPanel');
export const playerModal = document.getElementById('playerModal');
export const videoPlayerElement = document.getElementById('videoPlayerElement');
export const closeModal = document.getElementById('closeModal');
export const initialLoader = document.getElementById('initialLoader');
export const toastContainer = document.getElementById('toastContainer');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
import { firebaseConfig, categoryTree } from '../config/playlists.js';
import { translations } from '../config/translations.js';

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö
export { firebaseConfig, categoryTree, translations };

// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
export let currentLanguage = localStorage.getItem('appLanguage') || 'ru';
export let currentMainCategory = localStorage.getItem('homeMainCategory') || '–ì–ª–∞–≤–Ω–∞—è';
export let currentSubcategory = '';
export let checkChannelsOnLoad = localStorage.getItem('checkChannelsOnLoad') === 'true';
export let loadedPlaylists = {};
export let navigationState = 'channels';
export let currentWatchedChannel = null;
export let watchStartTime = null;

// –ì–ª–∞–≤–Ω–∞—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ª–µ–Ω—Ç—ã
export let homeRows;
try {
  homeRows = JSON.parse(localStorage.getItem('homeRows')) || [
    { type: 'special', name: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ' },
    { type: 'special', name: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ù–æ–≤–æ—Å—Ç–∏' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ú—É–∑—ã–∫–∞' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ö–∏–Ω–æ' }
  ];
} catch (e) {
  console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ homeRows, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
  homeRows = [
    { type: 'special', name: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ' },
    { type: 'special', name: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ù–æ–≤–æ—Å—Ç–∏' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ú—É–∑—ã–∫–∞' },
    { type: 'category', main: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', sub: '–ö–∏–Ω–æ' }
  ];
}

// Firebase - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ò–ú–ü–û–†–¢
// –ò—Å–ø–æ–ª—å–∑—É–µ–º compat –≤–µ—Ä—Å–∏—é –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
import firebase from 'https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js';
import 'https://www.gstatic.com/firebasejs/10.12.2/firebase-database-compat.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = firebase.initializeApp(firebaseConfig);
export const database = firebase.database();

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
export function translateText(key) {
  return translations[currentLanguage][key] || key;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞ - –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å)
export function loadAndRenderChannels(mainCategory, subCategory) {
  console.log('Loading channels for:', mainCategory, subCategory);
  
  // –ó–∞–≥–ª—É—à–∫–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (channelsContainer) {
    channelsContainer.innerHTML = `
      <div style="grid-column: 1 / -1; text-align: center; padding: 40px; color: #aaa;">
        <i class="fas fa-tv" style="font-size: 48px; margin-bottom: 20px;"></i>
        <h3>${translateText('–ó–∞–≥—Ä—É–∑–∫–∞...')}</h3>
        <p>${mainCategory} ‚Üí ${subCategory || '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</p>
      </div>
    `;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  console.log('üöÄ TV App Initialized');
  
  // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  if (initialLoader) {
    initialLoader.style.display = 'none';
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  if (typeof window.renderMainCategories === 'function') {
    window.renderMainCategories();
  }
  
  if (typeof window.renderSubCategories === 'function') {
    window.renderSubCategories(currentMainCategory);
  }
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  if (closeModal && playerModal) {
    closeModal.addEventListener('click', () => {
      playerModal.style.display = 'none';
      if (videoPlayerElement) {
        videoPlayerElement.pause();
        videoPlayerElement.src = '';
      }
    });
  }
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && playerModal && playerModal.style.display === 'flex') {
      playerModal.style.display = 'none';
      if (videoPlayerElement) {
        videoPlayerElement.pause();
        videoPlayerElement.src = '';
      }
    }
  });
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º firebase –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export { firebase };
